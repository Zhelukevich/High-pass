@charset "UTF-8";
@font-face {
  font-family: 'Roboto';
  src: local("Roboto Bold"), local("Roboto-Bold"), url("../font/Roboto-Bold.woff2") format("woff2"), url("../font/Roboto-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Roboto';
  src: local("Roboto Regular"), local("Roboto-Regular"), url("../font/Roboto-Regular.woff2") format("woff2"), url("../font/Roboto-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'TT Firs Neue';
  src: local("TT Firs Neue Bold"), local("TTFirsNeue-Bold"), url("../font/TTFirsNeue-Bold.woff2") format("woff2"), url("../font/TTFirsNeue-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'TT Firs Neue';
  src: local("TT Firs Neue Medium"), local("TTFirsNeue-Medium"), url("../font/TTFirsNeue-Medium.woff2") format("woff2"), url("../font/TTFirsNeue-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'TT Firs Neue';
  src: local("TT Firs Neue Regular"), local("TTFirsNeue-Regular"), url("../font/TTFirsNeue-Regular.woff2") format("woff2"), url("../font/TTFirsNeue-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

a {
  color: inherit;
  text-decoration: none;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

button {
  padding: 0;
  border: none;
  background-color: transparent;
  cursor: pointer;
}

path {
  transition: fill 0.3s linear;
}

img {
  max-width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

section {
  margin-bottom: 68px;
}

iframe {
  display: none;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Roboto", "TT Firs Neue", Arial, Helvetica, sans-serif;
  font-size: 16px;
  font-weight: 400;
}

.container {
  max-width: 1352px;
  margin: 0 auto;
  padding: 0 31px;
}

.header {
  width: 100%;
  background-color: #202020;
}

.header .header__burger {
  display: none;
}

.header__container {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  -ms-grid-rows: 80px;
      grid-template-rows: 80px;
  grid-column-gap: 30px;
  grid-auto-rows: 45px;
  align-items: center;
}

.header__container .header__logo {
  -ms-grid-column: 1;
  -ms-grid-column-span: 3;
  grid-column: 1/4;
  display: flex;
  align-items: center;
}

.header__container .nav {
  -ms-grid-column: 4;
  -ms-grid-column-span: 7;
  grid-column: 4/11;
}

.header__container .nav .nav__burger-open {
  display: none;
}

.header__container .nav__list {
  display: flex;
  justify-content: space-between;
}

.header__container .nav__list .nav__link {
  font-family: "TT Firs Neue";
  font-weight: 400;
  font-size: 16px;
  line-height: 21px;
  color: #fff;
  transition: color 0.3s linear;
}

.header__container .nav__list .nav__link:focus-visible {
  background-color: #BC572B;
  outline: 4px solid #BC572B;
  outline-offset: -1px;
}

.header__container .nav__list .nav__link:hover {
  color: #FF6E30;
}

.header__container .nav__list .nav__link:active {
  color: #CE4307;
}

.header__container .header__search-container {
  display: none;
}

.header__container .header__icon {
  -ms-grid-column: 11;
  -ms-grid-column-span: 2;
  grid-column: 11/13;
}

.header__container .header__list {
  height: 30px;
  display: flex;
  justify-content: flex-end;
}

.header__container .header__list .header__item:not(:last-child) {
  margin-right: 20px;
}

.header__container .header__list .header__item .header__item-icon:focus-visible {
  outline: none;
}

.header__container .header__list .header__item .header__item-icon:focus-visible path {
  fill: #BC572B;
}

.header__container .header__list .header__item .header__item-icon:hover path {
  fill: #FF6E30;
  transition: fill 0.3s linear;
}

.header__container .header__list .header__item .header__item-icon:active path {
  fill: #CE4307;
}

.hero__container {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[4];
      grid-template-columns: repeat(4, 1fr);
  -ms-grid-rows: 350px 257px;
      grid-template-rows: 350px 257px;
  grid-auto-rows: 257px;
  gap: 30px;
  padding-top: 34px;
}

.hero__container .hero__item1 {
  position: relative;
  display: flex;
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1/3;
  padding: 0 60px 60px 60px;
  background-image: url("../images/hero-background-1920.jpg");
  background-repeat: no-repeat;
  background-position: center bottom;
}

.hero__container .hero__item1::before {
  content: "#мастеркласс";
  position: absolute;
  top: 22px;
  right: 15px;
  padding: 7px 15px 7px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.hero__container .hero__item1 .hero__descr {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

.hero__container .hero__item1 .hero__descr .descr-hero__text {
  margin: 0;
  margin-bottom: 3px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
}

.hero__container .hero__item1 .hero__descr .descr-hero__title {
  margin: 0;
  margin-bottom: 19px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 36px;
  line-height: 104%;
  color: #fff;
}

.hero__container .hero__item1 .hero__descr .descr-hero__btn {
  max-width: 159px;
  height: 50px;
  background-color: #FF6E30;
  font-family: "Roboto";
  font-weight: 700;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
  transition: background 0.3s linear;
}

.hero__container .hero__item1 .hero__descr .descr-hero__btn:focus-visible {
  outline: 3px solid #CE4307;
}

.hero__container .hero__item1 .hero__descr .descr-hero__btn:hover {
  background-color: #BC572B;
}

.hero__container .hero__item1 .hero__descr .descr-hero__btn:active {
  background-color: #CE4307;
}

.hero__container .hero__item2 {
  display: flex;
  flex-direction: column;
  -ms-grid-column: 3;
  -ms-grid-column-span: 2;
  grid-column: 3/5;
  overflow: hidden;
}

.hero__container .hero__item2 .hero__title {
  margin: 0;
  margin-bottom: 25px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 24px;
  line-height: 104%;
  color: #202020;
}

.hero__container .hero__item2 .hero__picture {
  display: flex;
  height: 100%;
}

.hero__container .hero__img {
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  height: 100%;
}

.about {
  min-height: 500px;
  background-color: #202020;
  padding: 30px 0 69px;
}

.about__title {
  margin: 0;
  margin-bottom: 2px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 24px;
  line-height: 31px;
  color: #fff;
}

.about__grid {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[2];
      grid-template-columns: repeat(2, 1fr);
  -ms-grid-rows: 1fr;
      grid-template-rows: 1fr;
  grid-column-gap: 30px;
}

.about__text {
  margin: 0;
  padding-top: 3px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 28px;
  color: #CACACA;
}

.about__item2 {
  display: flex;
  flex-direction: column;
}

.about__item2 .about__picture {
  margin-bottom: 21px;
  height: 100%;
  font-size: 0;
}

.about__item2 .about__picture .about__img2 {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.about__item2 .about__form-title {
  margin: 0;
  margin-bottom: 16px;
  font-family: "TT Firs Neue";
  font-weight: 400;
  font-size: 24px;
  line-height: 22px;
  color: #fff;
}

.about__item2 .about__form {
  display: flex;
}

.about__item2 .about__form .about__input {
  position: relative;
  display: flex;
  width: 80%;
}

.about__item2 .about__form .about__input .just-validate-error-label {
  position: absolute;
  top: 3px;
  left: 23px;
}

.about__item2 .about__form .about__input .about__email {
  width: 100%;
  height: 50px;
  margin-right: 30px;
  padding: 0 23px;
  border: none;
  background-color: #4A4A4A;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
}

.about__item2 .about__form .about__input .about__email:-ms-input-placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #CACACA;
  -ms-transition: color 0.3s linear;
  transition: color 0.3s linear;
}

.about__item2 .about__form .about__input .about__email::-moz-placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #CACACA;
  -moz-transition: color 0.3s linear;
  transition: color 0.3s linear;
}

.about__item2 .about__form .about__input .about__email::placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #CACACA;
  transition: color 0.3s linear;
}

.about__item2 .about__form .about__input .about__email:focus-visible {
  outline: 1px solid #FF6E30;
}

.about__item2 .about__form .about__input .about__email:hover:-ms-input-placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__input .about__email:hover::-moz-placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__input .about__email:hover::placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__input :hover:-ms-input-placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__input :hover::-moz-placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__input :hover::placeholder {
  color: #FF6E30;
}

.about__item2 .about__form .about__btn {
  width: 126px;
  height: 50px;
  background-color: #FF6E30;
  font-family: "Roboto";
  font-weight: 700;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
  transition: background 0.3s linear;
}

.about__item2 .about__form .about__btn:focus-visible {
  outline: 3px solid #CE4307;
}

.about__item2 .about__form .about__btn:hover {
  background-color: #BC572B;
}

.about__item2 .about__form .about__btn:active {
  background-color: #CE4307;
}

.projects__title {
  margin: 0;
  margin-bottom: 12px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 24px;
  line-height: 31px;
  color: #202020;
}

.projects__grid {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  -ms-grid-rows: (1fr)[2];
      grid-template-rows: repeat(2, 1fr);
  grid-auto-rows: 300px;
  gap: 30px;
}

.projects__grid .projects__item1 {
  position: relative;
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
}

.projects__grid .projects__item1::before {
  content: "#пейзаж";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item2 {
  position: relative;
  -ms-grid-column: 3;
  -ms-grid-column-span: 2;
  grid-column: 3/5;
}

.projects__grid .projects__item2::before {
  content: "#портрет";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item3 {
  position: relative;
  -ms-grid-column: 5;
  -ms-grid-column-span: 2;
  grid-column: 5/7;
}

.projects__grid .projects__item3::before {
  content: "#предмет";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item3 .block__text {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.projects__grid .projects__item4 {
  position: relative;
  display: block;
  -ms-grid-column: 7;
  -ms-grid-column-span: 6;
  grid-column: 7/13;
  background-image: url("../images/projects-background-1.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

.projects__grid .projects__item4::before {
  content: "#fuji";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item5 {
  position: relative;
  display: block;
  -ms-grid-column: 1;
  -ms-grid-column-span: 6;
  grid-column: 1/7;
  -ms-grid-row: 2;
  grid-row: 2;
  background-image: url("../images/projects-background-2.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

.projects__grid .projects__item5::before {
  content: "#проектзабвение";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item6 {
  position: relative;
  -ms-grid-column: 7;
  -ms-grid-column-span: 3;
  grid-column: 7/10;
  -ms-grid-row: 2;
  grid-row: 2;
}

.projects__grid .projects__item6::before {
  content: "#ретушь";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .projects__item7 {
  position: relative;
  -ms-grid-column: 10;
  -ms-grid-column-span: 3;
  grid-column: 10/13;
  -ms-grid-row: 2;
  grid-row: 2;
}

.projects__grid .projects__item7::before {
  content: "#портрет";
  position: absolute;
  top: 7px;
  right: 7px;
  padding: 6px 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: #fff;
  background-color: #333;
}

.projects__grid .block {
  display: flex;
}

.projects__grid .block__box {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.projects__grid .block__box .block__picture {
  display: flex;
}

.projects__grid .block__img {
  margin-bottom: 13px;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  height: 184px;
}

.projects__grid .block__text {
  margin: 0;
  margin-bottom: 10px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: #202020;
}

.projects__grid .block__date {
  display: inline-block;
  margin-top: auto;
  background-image: url("../images/svg/mdi_calendar_today.svg");
  background-repeat: no-repeat;
  background-position: center left;
  padding-left: 17px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 12px;
  line-height: 22px;
  color: #999999;
}

.projects__grid .back {
  padding: 22px 0 30px 30px;
}

.projects__grid .back__box {
  max-width: 292px;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.projects__grid .back__date {
  display: block;
  background-image: url("../images/svg/mdi_calendar_today_white.svg");
  background-repeat: no-repeat;
  background-position: center left;
  margin-bottom: 2px;
  padding-left: 17px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 12px;
  line-height: 22px;
  color: #fff;
}

.projects__grid .back__title {
  margin: 0;
  margin-bottom: 6px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 24px;
  line-height: 24px;
  color: #fff;
}

.projects__grid .back__text {
  margin: 0;
  margin-bottom: 15px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: #fff;
}

.projects__grid .back__btn {
  margin-top: auto;
  width: 121px;
  height: 50px;
  border: 3px solid #FF6E30;
  font-family: "Roboto";
  font-weight: 700;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
  transition: background 0.2s linear, border 0.2s linear;
}

.projects__grid .back__btn:focus-visible {
  outline: none;
  background: #BC572B;
  border: 3px solid #FF6E30;
}

.projects__grid .back__btn:hover {
  background-color: #FF6E30;
}

.projects__grid .back__btn:active {
  background-color: #CE4307;
  border: 3px solid #CE4307;
}

.contacts__title {
  margin: 0;
  margin-bottom: 16px;
  font-family: "TT Firs Neue";
  font-weight: 700;
  font-size: 24px;
  line-height: 31px;
  color: #202020;
}

.contacts__grid {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 65.89% 1fr;
      grid-template-columns: 65.89% 1fr;
  -moz-column-gap: 30px;
  column-gap: 30px;
}

.contacts__grid .contacts__item1 {
  padding-top: 6px;
}

.contacts__grid .contacts__map {
  position: relative;
  height: 100%;
  width: 100%;
}

.contacts__grid .contacts__map [class*="ground-pane"] {
  filter: grayscale(1);
}

.contacts__grid .contacts__map [class*="copyrights-pane"] {
  display: none !important;
}

.contacts__grid .contacts__map .map__info {
  display: flex;
  flex-direction: column;
  position: absolute;
  left: 0;
  width: 410px;
  height: 100%;
  padding: 175px 50px 50px 60px;
  z-index: 2;
  background-color: rgba(32, 32, 32, 0.85);
}

.contacts__grid .contacts__map .map__info .map__title {
  margin: 0;
  margin-bottom: 5px;
  font-family: "TT Firs Neue";
  font-weight: 400;
  font-size: 24px;
  line-height: 22px;
  color: #fff;
}

.contacts__grid .contacts__map .map__info .map__descr {
  margin: 0;
  margin-bottom: 3px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 28px;
  color: #CACACA;
}

.contacts__grid .contacts__map .map__info .map__tel {
  margin: 0;
  padding-left: 22px;
  font-family: "TT Firs Neue";
  font-weight: 400;
  font-size: 16px;
  line-height: 21px;
  color: #fff;
  background-image: url("../images/svg/mdi_call.svg");
  background-repeat: no-repeat;
  background-position: center left;
}

.contacts__grid .contacts__map .map__info .map__exit {
  position: absolute;
  top: 20px;
  right: 20px;
}

.application__title {
  margin: 0;
  margin-bottom: 5px;
  font-family: "TT Firs Neue";
  font-weight: 400;
  font-size: 24px;
  line-height: 22px;
  color: #202020;
}

.application__descr {
  margin: 0;
  margin-bottom: 14px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: #999999;
}

.application__form {
  display: flex;
  flex-direction: column;
}

.application__form .input__name {
  position: relative;
}

.application__form .input__name .just-validate-error-label {
  position: absolute;
  top: 3px;
  left: 23px;
}

.application__form .input__email {
  position: relative;
}

.application__form .input__email .just-validate-error-label {
  position: absolute;
  top: 3px;
  left: 23px;
}

.application__form .input__message {
  position: relative;
  font-size: 0;
}

.application__form .input__message .just-validate-error-label {
  position: absolute;
  top: 3px;
  left: 23px;
}

.application__form .input__contacts {
  width: 100%;
  height: 50px;
  margin-bottom: 20px;
  padding: 0 23px;
  border: none;
  background-color: #E9E9E9;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #202020;
}

.application__form .input__contacts:-ms-input-placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #999999;
  -ms-transition: color 0.3s linear;
  transition: color 0.3s linear;
}

.application__form .input__contacts::-moz-placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #999999;
  -moz-transition: color 0.3s linear;
  transition: color 0.3s linear;
}

.application__form .input__contacts::placeholder {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: #999999;
  transition: color 0.3s linear;
}

.application__form .input__contacts:focus-visible {
  outline: 1px solid #FF6E30;
}

.application__form .input__contacts:hover:-ms-input-placeholder {
  color: #FF6E30;
}

.application__form .input__contacts:hover::-moz-placeholder {
  color: #FF6E30;
}

.application__form .input__contacts:hover::placeholder {
  color: #FF6E30;
}

.application__form .textarea {
  padding-top: 15px;
  padding-bottom: 15px;
  height: 150px;
  width: 100%;
  resize: none;
}

.application__form .application__btn {
  width: 126px;
  height: 50px;
  background-color: #FF6E30;
  font-family: "Roboto";
  font-weight: 700;
  font-size: 16px;
  line-height: 19px;
  color: #fff;
  transition: background 0.3s linear;
}

.application__form .application__btn:focus-visible {
  outline: 3px solid #CE4307;
}

.application__form .application__btn:hover {
  background-color: #BC572B;
}

.application__form .application__btn:active {
  background-color: #CE4307;
}

.footer {
  display: flex;
  align-items: center;
  padding-top: 24px;
  padding-bottom: 16px;
  background-color: #202020;
}

.footer .footer__container {
  width: 100%;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  -moz-column-gap: 30px;
  column-gap: 30px;
  align-items: center;
}

.footer .footer__container .footer-logo {
  -ms-grid-column: 1;
  -ms-grid-column-span: 4;
  grid-column: 1/5;
  width: 263px;
}

.footer .footer__container .footer-logo__text {
  display: inline-block;
  width: 263px;
  margin: 0;
  font-family: "TT Firs Neue";
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 18px;
  color: #E9E9E9;
}

.footer .footer__container .footer__right {
  -ms-grid-column: 5;
  -ms-grid-column-span: 8;
  grid-column: 5/13;
  display: flex;
  justify-content: space-between;
}

.footer .footer__container .footer-descr {
  width: 361px;
}

.footer .footer__container .footer-descr__text {
  width: 361px;
  margin: 0;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: #CACACA;
}

.footer .footer__container .footer-descr__text .footer-descr__span {
  color: #666666;
}

.footer .footer__container .footer-network {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.footer .footer__container .footer-network .footer-network__title {
  margin: 0;
  margin-bottom: 8px;
  font-family: "Roboto";
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: #CACACA;
}

.footer .footer__container .footer-network .footer-network__list {
  display: flex;
}

.footer .footer__container .footer-network .footer-network__list .footer-network__item:not(:last-child) {
  margin-right: 21px;
}

.footer .footer__container .footer-network .footer-network__list .footer-network__item-icon:focus-visible {
  outline: none;
}

.footer .footer__container .footer-network .footer-network__list .footer-network__item-icon:focus-visible path {
  fill: #BC572B;
}

.footer .footer__container .footer-network .footer-network__list .footer-network__item-icon:hover path {
  fill: #FF6E30;
  transition: fill 0.3s linear;
}

.footer .footer__container .footer-network .footer-network__list .footer-network__item-icon:active path {
  fill: #CE4307;
}

@media (max-width: 1024px) {
  .header {
    position: relative;
  }
  .header .burger--add {
    z-index: 5 !important;
    transform: translateY(0) !important;
    opacity: 1 !important;
  }
  .header .burger {
    position: absolute;
    display: flex;
    flex-direction: column;
    height: 541px;
    right: 0;
    left: 0;
    top: 70px;
    padding: 14px 21px 36px 21px;
    border-top: 1px solid #808080;
    background: #202020;
    z-index: -5;
    transform: translateY(-540px);
    opacity: 0;
    transition: opacity 0.5s linear, transform 0.5s linear;
  }
  .header .burger__exit {
    width: 18px;
    margin-bottom: 16px;
  }
  .header .burger__exit .burger__icon-exit:focus-visible {
    outline: none;
  }
  .header .burger__exit .burger__icon-exit:focus-visible circle {
    fill: #BC572B;
  }
  .header .burger__exit .burger__icon-exit:hover circle {
    fill: #FF6E30;
    transition: fill 0.3s linear;
  }
  .header .burger__exit .burger__icon-exit:active circle {
    fill: #CE4307;
  }
  .header .burger__item:not(:last-child) {
    margin-bottom: 30px;
  }
  .header .burger__link {
    font-family: "TT Firs Neue";
    font-weight: 400;
    font-size: 16px;
    line-height: 21px;
    color: #FFFFFF;
  }
  .header .burger__link:focus-visible {
    background-color: #BC572B;
    outline: 4px solid #BC572B;
    outline-offset: -1px;
  }
  .header .burger__link:hover {
    color: #FF6E30;
  }
  .header .burger__link:active {
    color: #CE4307;
  }
  .header .burger__tel {
    padding-left: 21px;
    margin-top: auto;
    font-family: "TT Firs Neue";
    font-weight: 500;
    font-size: 14px;
    line-height: 18px;
    color: #FF6E30;
    background-image: url("../images/svg/mdi_call R.svg");
    background-repeat: no-repeat;
    background-position: center left;
  }
  .header .burger__tel:focus-visible {
    background-color: #fff;
    outline: 4px solid #fff;
    outline-offset: -1px;
  }
  .header .burger__tel:hover {
    color: #fff;
  }
  .header .burger__tel:active {
    color: #fff;
  }
  .header__container {
    -ms-grid-columns: (1fr)[8];
        grid-template-columns: repeat(8, 1fr);
  }
  .header__container .header__logo {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
  }
  .header__container .header__logo .header__img {
    width: 166px;
  }
  .header__container .nav {
    -ms-grid-column: 3;
    -ms-grid-column-span: 5;
    grid-column: 3/8;
  }
  .header__container .nav__list {
    display: flex;
    justify-content: start;
  }
  .header__container .nav__list .nav__item:not(:last-child) {
    margin-right: 33px;
  }
  .header__container .header__search-container {
    position: relative;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    -ms-grid-column: 8;
    -ms-grid-column-span: 1;
    grid-column: 8/9;
  }
  .header__container .header__search-container .search--open {
    display: flex !important;
    transform: none !important;
  }
  .header__container .header__search-container .header__search-left {
    position: absolute;
    right: 0;
    top: 42px;
    display: none;
    align-items: center;
    padding-right: 3px;
    width: 342px;
    height: 30px;
    background: #202020;
    transform: translateY(-42px);
  }
  .header__container .header__search-container .header__search-left .search__form-left {
    display: flex;
    align-items: center;
    width: 100%;
    height: 21px;
  }
  .header__container .header__search-container .header__search-left .search__form-left input[type=text]::-ms-clear {
    display: none;
    width: 0;
    height: 0;
  }
  .header__container .header__search-container .header__search-left .search__form-left input[type=text]::-ms-reveal {
    display: none;
    width: 0;
    height: 0;
  }
  .header__container .header__search-container .header__search-left .search__form-left input[type="search"]::-webkit-search-decoration,
  .header__container .header__search-container .header__search-left .search__form-left input[type="search"]::-webkit-search-cancel-button,
  .header__container .header__search-container .header__search-left .search__form-left input[type="search"]::-webkit-search-results-button,
  .header__container .header__search-container .header__search-left .search__form-left input[type="search"]::-webkit-search-results-decoration {
    display: none;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input {
    padding: 0;
    width: 100%;
    border: none;
    border-bottom: 1px solid #E9E9E9;
    background: none;
    margin-right: 9px;
    font-family: "TT Firs Neue";
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 21px;
    color: #E9E9E9;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input:-ms-input-placeholder {
    font-family: "TT Firs Neue";
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 21px;
    color: #E9E9E9;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input::-moz-placeholder {
    font-family: "TT Firs Neue";
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 21px;
    color: #E9E9E9;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input::placeholder {
    font-family: "TT Firs Neue";
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 21px;
    color: #E9E9E9;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input:focus-visible {
    outline: 1px solid #FF6E30;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input:hover:-ms-input-placeholder {
    color: #FF6E30;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input:hover::-moz-placeholder {
    color: #FF6E30;
  }
  .header__container .header__search-container .header__search-left .search__form-left .search__input:hover::placeholder {
    color: #FF6E30;
  }
  .header__container .header__search-container .header__search-open {
    display: flex;
    align-items: center;
  }
  .header__container .header__search-container .header__search-open:focus-visible {
    outline: none;
  }
  .header__container .header__search-container .header__search-open:focus-visible path {
    fill: #BC572B;
  }
  .header__container .header__search-container .header__search-open:hover path {
    fill: #FF6E30;
    transition: fill 0.3s linear;
  }
  .header__container .header__search-container .header__search-open:active path {
    fill: #CE4307;
  }
  .header__container .header__icon {
    display: none;
  }
  .hero__container {
    -ms-grid-rows: 1fr 186px;
        grid-template-rows: 1fr 186px;
    grid-auto-rows: 257px;
  }
  .about__grid .about__item2 {
    display: flex;
    flex-direction: column;
  }
  .about__grid .about__item2 .about__picture {
    margin-bottom: 24px;
  }
  .about__grid .about__item2 .about__form {
    flex-direction: column;
  }
  .about__grid .about__item2 .about__form .about__input {
    margin-bottom: 20px;
  }
  .projects__grid {
    -ms-grid-columns: (1fr)[8];
        grid-template-columns: repeat(8, 1fr);
    -ms-grid-rows: (auto)[3];
        grid-template-rows: repeat(3, auto);
    row-gap: 23px;
  }
  .projects__grid .block__text {
    margin-bottom: 18px;
  }
  .projects__grid .projects__item1 {
    position: relative;
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
  }
  .projects__grid .projects__item1 .block__text {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .projects__grid .projects__item2 {
    position: relative;
    -ms-grid-column: 3;
    -ms-grid-column-span: 2;
    grid-column: 3/5;
  }
  .projects__grid .projects__item2 .block__text {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .projects__grid .projects__item3 {
    position: relative;
    -ms-grid-column: 5;
    -ms-grid-column-span: 4;
    grid-column: 5/9;
  }
  .projects__grid .projects__item3 .block__text {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .projects__grid .projects__item4 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 5;
    grid-column: 1/6;
    -ms-grid-row: 2;
    grid-row: 2;
    background-image: url("../images/projects-background-1-1024.jpg");
  }
  .projects__grid .projects__item5 {
    -ms-grid-column: 4;
    -ms-grid-column-span: 5;
    grid-column: 4/9;
    -ms-grid-row: 3;
    grid-row: 3;
    background-image: url("../images/projects-background-2-1024.jpg");
  }
  .projects__grid .projects__item5 .back {
    padding: 0;
  }
  .projects__grid .projects__item6 {
    position: relative;
    -ms-grid-column: 6;
    -ms-grid-column-span: 3;
    grid-column: 6/9;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .projects__grid .projects__item7 {
    position: relative;
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1/4;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .projects__grid .block__img {
    margin-bottom: 18px;
  }
  .projects__grid .back {
    padding: 30px 0 38px 30px;
  }
  .contacts__grid {
    -ms-grid-columns: (1fr)[8];
        grid-template-columns: repeat(8, 1fr);
  }
  .contacts__grid .contacts__item1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 5;
    grid-column: 1/6;
  }
  .contacts__grid .contacts__item2 {
    -ms-grid-column: 6;
    -ms-grid-column-span: 3;
    grid-column: 6/9;
  }
  .contacts__grid .contacts__map .map__info {
    display: flex;
    flex-direction: column;
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 200px;
    padding: 25px 0 0 30px;
    z-index: 2;
    background-color: rgba(32, 32, 32, 0.85);
  }
  .contacts__grid .contacts__map .map__info .map__location {
    max-width: 293px;
  }
  .footer .footer__container {
    -ms-grid-columns: (1fr)[8];
        grid-template-columns: repeat(8, 1fr);
  }
  .footer .footer__container .footer-logo {
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1/4;
  }
  .footer .footer__container .footer-logo .footer-logo__img {
    width: 166px;
  }
  .footer .footer__container .footer__right {
    -ms-grid-column: 4;
    -ms-grid-column-span: 5;
    grid-column: 4/9;
  }
}

@media (max-width: 992px) {
  .container {
    max-width: 1046px;
    padding: 0 27px;
  }
  .header {
    position: relative;
  }
  .header__container {
    -ms-grid-columns: (1fr)[6];
        grid-template-columns: repeat(6, 1fr);
    -ms-grid-rows: ()[2];
        grid-template-rows: repeat(2);
  }
  .header__container .header__logo {
    -ms-grid-column: 1;
    -ms-grid-column-span: 5;
    grid-column: 1/6;
  }
  .header__container .nav {
    display: flex;
    align-items: center;
    height: 100%;
    -ms-grid-column: 1;
    -ms-grid-column-span: 8;
    grid-column: 1/9;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .header__container .nav::before {
    content: '';
    position: absolute;
    width: 100%;
    min-height: 45px;
    bottom: 0;
    right: 0;
    left: 0;
    background-color: #4A4A4A;
  }
  .header__container .nav__list {
    position: relative;
    display: flex;
    justify-content: space-between;
    width: 100%;
  }
  .header__container .nav__list .nav__item:not(:last-child) {
    margin-right: 0px;
  }
  .header__container .header__icon {
    display: none;
  }
  .hero__container {
    padding-top: 34px;
    -ms-grid-columns: (1fr)[4];
        grid-template-columns: repeat(4, 1fr);
    -ms-grid-rows: 291px 133px;
        grid-template-rows: 291px 133px;
  }
  .hero__container .hero__item1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
    -ms-grid-row: 1;
    -ms-grid-row-span: 2;
    grid-row: 1/3;
    background-image: url("../images/hero-background-768.jpg");
    background-position: center bottom;
    background-size: cover;
  }
  .hero__container .hero__item1 .hero__descr .descr-hero__text {
    margin-bottom: 14px;
  }
  .hero__container .hero__item1 .hero__descr .descr-hero__title {
    margin-bottom: 23px;
    font-size: 34px;
    line-height: 90%;
  }
  .hero__container .hero__item2 {
    -ms-grid-column: 3;
    -ms-grid-column-span: 2;
    grid-column: 3/5;
  }
  .hero__container .hero__item2 .hero__title {
    margin-bottom: 17px;
    font-size: 22px;
    line-height: 104%;
  }
  .hero__container .hero__item3 {
    -ms-grid-column: 3;
    -ms-grid-column-span: 1;
    grid-column: 3/4;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .hero__container .hero__item4 {
    -ms-grid-column: 4;
    -ms-grid-column-span: 1;
    grid-column: 4/5;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .about {
    background-color: #202020;
    padding: 30px 0 50px;
  }
  .about .about__item2 {
    padding-bottom: 20px;
  }
  .about .about__form {
    width: 100%;
  }
  .about .about__form .about__input {
    width: 100%;
  }
  .about .about__form .about__input .about__email {
    margin-right: 0;
  }
  .projects__grid {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
        grid-template-columns: repeat(6, 1fr);
    -ms-grid-rows: auto;
        grid-template-rows: auto;
  }
  .projects__grid .projects__item1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
  }
  .projects__grid .projects__item1 .block__text {
    -webkit-line-clamp: 3;
  }
  .projects__grid .projects__item2 {
    -ms-grid-column: 3;
    -ms-grid-column-span: 2;
    grid-column: 3/5;
  }
  .projects__grid .projects__item2 .block__text {
    -webkit-line-clamp: 3;
  }
  .projects__grid .projects__item3 {
    position: relative;
    -ms-grid-column: 5;
    -ms-grid-column-span: 2;
    grid-column: 5/7;
  }
  .projects__grid .projects__item4 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 6;
    grid-column: 1/7;
    -ms-grid-row: 2;
    grid-row: 2;
    background-image: url("../images/projects-background-1-768.jpg");
  }
  .projects__grid .projects__item5 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 6;
    grid-column: 1/7;
    -ms-grid-row: 4;
    grid-row: 4;
    background-image: url("../images/projects-background-2-768.jpg");
  }
  .projects__grid .projects__item6 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1/4;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .projects__grid .projects__item7 {
    -ms-grid-column: 4;
    -ms-grid-column-span: 3;
    grid-column: 4/7;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .projects__grid .back {
    padding: 30px 0 30px 30px;
  }
  .projects__grid .block__text {
    margin-bottom: 12px;
  }
  .contacts__grid {
    -ms-grid-columns: (1fr)[6];
        grid-template-columns: repeat(6, 1fr);
    -ms-grid-rows: 460px, 1fr;
        grid-template-rows: 460px, 1fr;
    row-gap: 24px;
  }
  .contacts__grid .contacts__item1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 6;
    grid-column: 1/7;
  }
  .contacts__grid .contacts__item2 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 4;
    grid-column: 1/5;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .contacts__grid .contacts__map {
    min-height: 466px;
  }
  .contacts__grid .contacts__map .map__info {
    height: 157px;
    padding: 25px 0 24px 30px;
  }
  .contacts__grid .contacts__map .map__info .map__location {
    max-width: 436px;
  }
  .footer .footer__container {
    -ms-grid-columns: (1fr)[6];
        grid-template-columns: repeat(6, 1fr);
  }
  .footer .footer__container .footer-logo {
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1/4;
  }
  .footer .footer__container .footer__descr {
    display: none;
  }
  .footer .footer__container .footer__right {
    -ms-grid-column: 4;
    -ms-grid-column-span: 3;
    grid-column: 4/7;
    display: flex;
    justify-content: flex-end;
  }
}

@media (max-width: 576px) {
  section {
    margin-bottom: 50px;
  }
  .container {
    max-width: 618;
    padding: 0 21px;
  }
  .header {
    position: relative;
  }
  .header__container {
    -ms-grid-rows: 70px;
        grid-template-rows: 70px;
  }
  .header__container .nav .nav__burger-open {
    position: relative;
    display: block;
  }
  .header__container .header__search-container .header__search-left {
    right: 0;
    top: 0px;
    width: 279px;
    transform: none;
  }
  .header__container .header__logo .header__img {
    width: 111.55px;
  }
  .header__container .search__icon {
    width: 20px;
    height: 20px;
  }
  .header__container .nav__list {
    display: none;
  }
  .hero__container {
    padding-top: 30px;
    -ms-grid-columns: (1fr)[2];
        grid-template-columns: repeat(2, 1fr);
    -ms-grid-rows: (auto)[3];
        grid-template-rows: repeat(3, auto);
  }
  .hero__container .hero__item1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
    -ms-grid-row: 1;
    grid-row: 1;
    background-image: url("../images/hero-background-320.jpg");
    background-position: center center;
    padding: 234px 46px 30px 30px;
  }
  .hero__container .hero__item1::before {
    top: 6px;
    right: 5px;
    padding: 4px 7px;
    font-size: 12px;
    line-height: 14px;
  }
  .hero__container .hero__item1 .hero__descr .descr-hero__text {
    margin-bottom: 10px;
    font-size: 14px;
    line-height: 16px;
  }
  .hero__container .hero__item1 .hero__descr .descr-hero__title {
    margin-bottom: 14px;
    font-size: 24px;
    line-height: 110%;
  }
  .hero__container .hero__item1 .hero__descr .descr-hero__btn {
    width: 145px;
    height: 40px;
    font-size: 14px;
    line-height: 16px;
  }
  .hero__container .hero__item2 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .hero__container .hero__item2 .hero__title {
    margin-bottom: 17px;
    font-size: 18px;
    line-height: 104%;
  }
  .hero__container .hero__item3 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 1;
    grid-column: 1/2;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .hero__container .hero__item4 {
    -ms-grid-column: 2;
    -ms-grid-column-span: 1;
    grid-column: 2/3;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .about {
    padding: 31px 0 60px;
  }
  .about .about__title {
    margin-bottom: 2px;
    font-size: 18px;
    line-height: 23px;
  }
  .about .about__grid {
    -ms-grid-columns: 1fr;
        grid-template-columns: 1fr;
    -ms-grid-rows: 2;
        grid-template-rows: 2;
  }
  .about .about__grid .about__item2 {
    padding-bottom: 0px;
  }
  .about .about__grid .about__item2 .about__picture {
    margin-bottom: 26px;
  }
  .about .about__grid .about__item2 .about__form-title {
    margin-bottom: 14px;
    font-size: 18px;
    line-height: 22px;
  }
  .about .about__grid .about__item2 .about__form .about__input .about__email {
    height: 40px;
  }
  .about .about__grid .about__item2 .about__form .about__input .about__email:-ms-input-placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .about .about__grid .about__item2 .about__form .about__input .about__email::-moz-placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .about .about__grid .about__item2 .about__form .about__input .about__email::placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .about .about__grid .about__item2 .about__form .about__btn {
    width: 115px;
    height: 40px;
    font-size: 14px;
    line-height: 16px;
  }
  .about__text {
    margin-bottom: 23px;
    font-size: 14px;
    line-height: 25px;
  }
  .projects__title {
    margin: 0;
    margin-bottom: 16px;
    font-size: 18px;
    line-height: 23px;
  }
  .projects__grid {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: 1fr;
        grid-template-columns: 1fr;
    -ms-grid-rows: (auto)[7];
        grid-template-rows: repeat(7, auto);
  }
  .projects__grid .projects__item1 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 1;
    grid-row: 1;
  }
  .projects__grid .projects__item1::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item1 .block__text {
    -webkit-line-clamp: 2;
  }
  .projects__grid .projects__item2 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .projects__grid .projects__item2::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item2 .block__text {
    -webkit-line-clamp: 2;
  }
  .projects__grid .projects__item3 {
    position: relative;
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 3;
    grid-row: 3;
  }
  .projects__grid .projects__item3::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item4 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 4;
    grid-row: 4;
    background-image: url("../images/projects-background-1-320.jpg");
  }
  .projects__grid .projects__item4::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item5 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 7;
    grid-row: 7;
    background-image: url("../images/projects-background-2-320.jpg");
  }
  .projects__grid .projects__item5::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item6 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 5;
    grid-row: 5;
  }
  .projects__grid .projects__item6::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .projects__item7 {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 6;
    grid-row: 6;
  }
  .projects__grid .projects__item7::before {
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 5px 14px;
    font-family: "Roboto";
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    color: #fff;
    background-color: #333;
  }
  .projects__grid .back {
    padding: 196px 0 30px 30px;
  }
  .projects__grid .back__date {
    margin-bottom: 7px;
  }
  .projects__grid .back__title {
    margin: 0;
    margin-bottom: 9px;
    font-size: 24px;
    line-height: 24px;
  }
  .projects__grid .back__text {
    margin: 0;
    margin-bottom: 16px;
    font-size: 14px;
    line-height: 18px;
  }
  .projects__grid .back__btn {
    width: 109px;
    height: 40px;
    font-size: 14px;
    line-height: 16px;
  }
  .projects__grid .block__img {
    margin-bottom: 13px;
    -o-object-fit: cover;
       object-fit: cover;
    width: 100%;
    height: 300px;
  }
  .projects__grid .block__text {
    margin-bottom: 11px;
  }
  .contacts {
    position: relative;
  }
  .container .contacts__title {
    margin-bottom: 14px;
    font-size: 18px;
    line-height: 23px;
  }
  .contacts__grid {
    display: block;
    -ms-grid-columns: 1fr;
        grid-template-columns: 1fr;
    -ms-grid-rows: 2;
        grid-template-rows: 2;
    -moz-column-gap: 30px;
    column-gap: 30px;
  }
  .contacts__grid .contacts__item1 {
    display: flex;
    padding-top: 0;
    max-height: 472px;
    margin-bottom: 495px;
  }
  .contacts__grid .contacts__map {
    display: flex;
    width: 100%;
    max-height: 472px;
    position: absolute;
    top: 35px;
    right: 0;
    left: 0;
  }
  .contacts__grid .contacts__map .ymaps-2-1-79-map {
    min-height: 472px;
    width: 100% !important;
  }
  .contacts__grid .contacts__map .map__info {
    display: flex;
    flex-direction: column;
    position: absolute;
    left: 0;
    width: 100%;
    padding: 26px 35px 14px 20px;
  }
  .contacts__grid .contacts__map .map__info .map__title {
    margin: 0;
    margin-bottom: 10px;
    font-size: 18px;
    line-height: 22px;
  }
  .contacts__grid .contacts__map .map__info .map__descr {
    margin-bottom: 11px;
    font-size: 14px;
    line-height: 18px;
  }
  .contacts__grid .contacts__map .map__info .map__tel {
    font-size: 14px;
    line-height: 18px;
  }
  .contacts__grid .contacts__map .map__info .map__exit {
    position: absolute;
    top: 20px;
    right: 20px;
  }
  .contacts__grid .application__title {
    margin-bottom: 7px;
    font-size: 18px;
    line-height: 22px;
  }
  .contacts__grid .application__descr {
    margin-bottom: 16px;
    font-size: 14px;
    line-height: 18px;
  }
  .contacts__grid .application__form .input__contacts {
    width: 100%;
    height: 40px;
    font-size: 14px;
    line-height: 16px;
  }
  .contacts__grid .application__form .input__contacts:-ms-input-placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .contacts__grid .application__form .input__contacts::-moz-placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .contacts__grid .application__form .input__contacts::placeholder {
    font-size: 14px;
    line-height: 16px;
  }
  .contacts__grid .application__form .textarea {
    padding-top: 12px;
    padding-bottom: 12px;
    height: 150px;
    width: 100%;
    resize: none;
  }
  .contacts__grid .application__form .application__btn {
    width: 115px;
    height: 40px;
    font-size: 14px;
    line-height: 16px;
  }
  .footer {
    padding: 0;
    position: relative;
  }
  .footer .footer__container {
    -ms-grid-columns: (1fr)[2];
        grid-template-columns: repeat(2, 1fr);
    -ms-grid-rows: 123px, 62px;
        grid-template-rows: 123px, 62px;
    align-items: center;
    justify-items: center;
  }
  .footer .footer__container .footer-logo::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 62px;
    bottom: 0;
    right: 0;
    left: 0;
    background-color: #4A4A4A;
  }
  .footer .footer__container .footer-logo {
    padding: 14px 0 13px 0;
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: center;
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  .footer .footer__container .footer-logo .footer-logo__img {
    position: relative;
    width: 111.55px;
  }
  .footer .footer__container .footer-logo .footer-logo__text {
    position: relative;
    display: flex;
    justify-content: center;
    width: 100%;
  }
  .footer .footer__container .footer__right {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1/3;
    -ms-grid-row: 1;
    grid-row: 1;
    padding-top: 31px;
    padding-bottom: 32px;
  }
}

@media (max-width: 320px) {
  .projects__grid .block__img {
    margin-bottom: 13px;
    -o-object-fit: cover;
       object-fit: cover;
    width: 100%;
    height: 100%;
  }
}
/*# sourceMappingURL=style.css.map */
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLmNzcyIsInN0eWxlLmNzcyIsInN0eWxlLmNzcyIsInN0eWxlLmNzcyIsInN0eWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDRSxxQkFBcUI7RUFDckIsaUpBRWdEO0VBQ2hELGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0FEQXBCOztBQ0dBO0VBQ0UscUJBQXFCO0VBQ3JCLDZKQUVtRDtFQUNuRCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBREZwQjs7QUNLQTtFQUNFLDJCQUEyQjtFQUMzQixtS0FFb0Q7RUFDcEQsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixrQkFBa0I7QURKcEI7O0FDT0E7RUFDRSwyQkFBMkI7RUFDM0IsMktBRXNEO0VBQ3RELGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0FETnBCOztBQ1NBO0VBQ0UsMkJBQTJCO0VBQzNCLCtLQUV1RDtFQUN2RCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBRFJwQjs7QUVuQ0E7RUFFQyxzQkFBQTtBRnNDRDs7QUVuQ0E7OztFRnlDVSxtQkFBbUI7QUVwQzdCOztBRnVDQTtFRXBDQyxjQUFBO0VGc0NDLHFCQUFxQjtBRXBDdkI7O0FGdUNBO0VFcENFLFNBQUE7RUFDRCxVQUFBO0VGc0NDLGdCQUFnQjtBRXBDbEI7O0FGdUNBO0VFcENFLFVBQUE7RUFDQSxZQUFRO0VBQ1QsNkJBQUE7RUZzQ0MsZUFBZTtBRXBDakI7O0FGdUNBO0VFbENBLDRCQUFJO0FGcUNKOztBQUVBO0VBQ0UsZUFBZTtFRW5DakIsb0JBQVE7S0FDTixpQkFBbUI7QUZxQ3JCOztBRWxDQTtFQUNFLG1CQUFhO0FGcUNmOztBRWpDQTtFQUNFLGFBQVM7QUZvQ1g7O0FBRUE7RUVsQ0UsU0FBQTtFQUNELFVBQUE7RUZvQ0MsbUVBQW1FO0VFbENyRSxlQUFXO0VBQ1QsZ0JDNURrQjtBSGdHcEI7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LGtCQU9FO0VBOENRLDJCQUFjO0VBQ2YsZ0JBQUE7RUZ3RFAsZUFBZTtFRTlHakIsaUJBT0U7RUFvREksY0FBYTtBRnNEbkI7O0FBRUE7RUFDRSxTQUFTO0VFcEhYLG1CQU9FO0VBMERNLHFCQUFTO0VBRVQsZ0JBQWU7RUFDZixlQ3g2QkE7RUR5NkJBLGlCQUFnQjtFQUNoQixjQUFXO0FGcURuQjs7QUFFQTtFRWpEUSxhQUFhO0VBR1gsc0JBQWtCO0FGc0Q1Qjs7QUVySUE7RUFxRlksa0JBQWE7QUZvRHpCOztBRXpJQTtFQXlGWSxrQkNoOEJRO0VEaThCVCxRQUFBO0VGb0RULFVBQVU7QUU5SVo7O0FGaUpBO0VFbERXLGtCQUFBO0FGb0RYOztBQUVBO0VFbERXLGtCQUFBO0VGb0RULFFBQVE7RUt4Z0NWLFVBQVE7QUwwZ0NSOztBQUVBO0VLMWdDRSxrQkFHRTtFTHlnQ0YsWUt4Z0NhO0FMeWdDZjs7QUFFQTtFSy9nQ0Usa0JBU1U7RUx3Z0NWLFFLdmdDSTtFTHdnQ0osVUt2Z0NXO0FMd2dDYjs7QUFFQTtFQUNFLFdLdmdDVztFTHdnQ1gsWUt2Z0NhO0VMd2dDYixtQkt2Z0NhO0VMd2dDYixlS3ZnQ2dCO0VMd2dDaEIsWUt2Z0NjO0VMd2dDZCx5Qkt2Z0NlO0VMd2dDZixxQkt2Z0NlO0VMd2dDZixnQkt2Z0NjO0VMd2dDZCxlS3ZnQ2dCO0VMd2dDaEIsaUJLMzdCRztFQXBHSCxjQXlCSztBTHdnQ1A7O0FBWUE7RUs3aUNFLHFCQXlCVztFTHNoQ1gsZ0JHcmlDbUI7RUhzaUNuQixlS3BnQ087RUE1Q1AsaUJBK0NLO0VMbWdDTCxjS2xnQ007RUFoRE4saUNBbURZO0VBbkRaLDZCQW1EWTtBTGtnQ2Q7O0FBWUE7RUFDRSxxQktoZ0NPO0VBbEVQLGdCQW1ESztFTGloQ0wsZUcxakNZO0VIMmpDWixpQksvL0JPO0VBdEVQLGNBeUVLO0VMKy9CTCxrQ0s3L0JzQjtFTDYvQnRCLDZCSzcvQnNCO0FMOC9CeEI7O0FBUkE7RUFDRSxxQktoZ0NPO0VBbEVQLGdCQW1ESztFTGloQ0wsZUcxakNZO0VIMmpDWixpQksvL0JPO0VBdEVQLGNBeUVLO0VMKy9CTCw2Qks3L0JzQjtBTDgvQnhCOztBQUVBO0VBQ0UsMEJLNy9CdUI7QUw4L0J6Qjs7QUFNQTtFQUNFLGNLNS9Cb0I7QUw2L0J0Qjs7QUFNQTtFQUNFLGNLMS9CTztBTDIvQlQ7O0FBRkE7RUFDRSxjSzEvQk87QUwyL0JUOztBQUVBO0VLcC9CSyxpQkFBQTtFTHMvQkgsb0JLbC9Cc0I7RUxtL0J0QixhSzkrQks7RUFURixXQUFBO0VMeS9CSCxZS2wvQmU7QUxtL0JqQjs7QUFFQTtFQUNFLFlLaC9CSztFQWJGLFlBQUE7RUwrL0JILHlCSy8rQm1CO0VMZy9CbkIscUJLLytCdUI7RUxnL0J2QixnQkszK0JLO0VBdEJGLGVBQUE7RUxtZ0NILGlCSy8rQnNCO0VMZy9CdEIsV0svK0JPO0VMaS9CUCxrQ0szK0J3QjtBTDQrQjFCOztBQUVBO0VBQ0UsMEJLMytCc0I7QUw0K0J4Qjs7QUFFQTtFQUNFLHlCSzErQm1CO0FMMitCckI7O0FBRUE7RUFDRSx5Qkt4K0JnQjtBTHkrQmxCOztBQUVBO0VBR0UsYUt4K0JnQjtFQThEVCxtQkFBQTtFQTlHSixpQkFBQTtFTDZoQ0gsb0JLditCdUI7RUx3K0J2Qix5Qkt2K0I2QjtBTHcrQi9COztBQUVBO0VLamlDSyxXQUFBO0VMbWlDSCxpQkt2K0J5QjtFTHcrQnpCLGFLditCb0I7RUx3K0JwQiwyQkt2K0JxQjtNQUNWLHNDQUFBO0VBR0MscUJBQWE7RUFBYixnQkFBYTtFQUdkLG1CQUFBO0FMdStCYjs7QUFFQTtFSzlpQ0ssa0JBQVc7RUxnakNkLHVCS3IrQnlCO0VMcytCekIsZ0JLcitCVztFQTVFUixZQUFBO0FMbWpDTDs7QUFFQTtFQUNFLHFCS3ArQjJCO0VMcStCM0IsWUtwK0JzQjtFTHErQnRCLFNLcCtCWTtFTHErQlosMkJHeHBDTTtFSHlwQ04sa0JLcCtCd0I7RUxxK0J4QixnQktwK0J5QjtFTHErQnpCLGVLcCtCdUI7RUxxK0J2QixpQktwK0J5QjtFTHErQnpCLGNLcCtCbUI7QUxxK0JyQjs7QUFFQTtFQUNFLGtCS3ArQjBCO0VMcStCMUIsdUJLcCtCOEI7RUxxK0I5QixpQktwK0I2QjtFTHUrQjdCLGFLcCtCYTtFQUlBLDhCQUFBO0FMbytCZjs7QUFFQTtFSzdrQ0ssWUFBQTtBTCtrQ0w7O0FBRUE7RUtqbENLLFlBQUE7RUxtbENILFNLNzlCaUI7RUw4OUJqQixxQks3OUJTO0VBdkhOLGdCQUFBO0VMc2xDSCxlR3pyQ2tCO0VIMHJDbEIsaUJLNTlCUztFQTNITixjQUFBO0FMeWxDTDs7QUFFQTtFSzNsQ0ssY0FBQTtBTDZsQ0w7O0FBRUE7RUs5OEJFLGFBQUE7RUFRQSxzQkFDZ0I7RUFnQmIsbUJBQUE7QUxnOEJMOztBQUVBO0VLbjlCRSxTQUFBO0VMcTlCQSxrQksxOEJzQjtFTDI4QnRCLHFCS3Q4Qks7RUFoQkwsZ0JBQ0U7RUx1OUJGLGVLMThCcUI7RUwyOEJyQixpQksxOEJPO0VBTVAsY0FBQTtBTHM4QkY7O0FBRUE7RUFHRSxhS3I4Qkk7QUxzOEJOOztBQUVBO0VBQ0Usa0JLcDhCb0I7QUxxOEJ0Qjs7QUFFQTtFQUNFLGFLcDhCTTtBTHE4QlI7O0FBRUE7RUt0OUJFLGFBQUE7QUx3OUJGOztBQUVBO0VLMTlCRSxhQUFBO0VMNjlCQSw0QktqOEIyQjtBTGs4QjdCOztBQUVBO0VLaCtCRSxhQUFBO0FMaytCRjs7QUFFQTtFS3ArQkU7SUF3Q00sa0JBQVM7RUwrN0JmO0VBQ0E7SUs3N0JNLHFCQUFnQjtJQTNDdEIsbUNBK0NtQjtJQUNmLHFCQUFnQjtFTDY3QnBCO0VBQ0E7SUsxN0JHLGtCQUFBO0lBSUMsYUFBVztJQUlGLHNCQUFHO0lBQ1gsYUFBQTtJQTdETCxRQUFBO0lBaUVJLE9BQUE7SUFDQSxTQUFBO0lBQ0EsNEJBQVc7SUFDWiw2QkFBQTtJQXBFSCxtQkFzRUU7SUFDRSxXQUFVO0lBRUYsNkJBQUc7SUFDWixVQUFBO0lBSUEsc0RBQUE7RUx3N0JIO0VBQ0E7SUtoN0JBLFdBQUE7SUFDRSxtQkFBQTtFTGs3QkY7RUtuN0JBO0lBSUksYUFBYTtFTGs3QmpCO0VLdDdCQTtJQVFJLGFBQWE7RUxpN0JqQjtFS3o3QkE7SUFjTSxhQUFhO0lBRWIsNEJBQWtCO0VMODZCeEI7RUFDQTtJSzU2Qk0sYUFBYTtFTDg2Qm5CO0VBQ0E7SUs1NkJNLG1CQUFrQjtFTDg2QnhCO0VLcDhCQTtJQXlCUSwyQkFBZ0I7SUFDakIsZ0JBQUE7SUFLUCxlQUNFO0lBQ0UsaUJBQUE7SUFhRCxjQUFBO0VBZkg7RUw2NkJBO0lLbjZCSyx5QkFBQTtJQVZMLDBCQUlJO0lBSUksb0JBQVk7RUx5NkJwQjtFS2o3QkE7SUFhTSxjQUFhO0VMdTZCbkI7RUFDQTtJQUNFLGNBQWM7RUtqNkJsQjtFQUVFO0lBQ0Usa0JGeGEwQjtJRXlhMUIsZ0JBQWU7SUFDaEIsMkJBQUE7SUFFRCxnQkFBUTtJQUNOLGVBQVU7SUE2RFgsaUJBQUE7SUExREMsY0FBQTtJQUNFLHFEQUFxQztJQUNyQyw0QkFBb0I7SUF1RHJCLGdDQUFBO0VBekRBO0VMbzZCSDtJSzc1Qkssc0JBQUE7SUFQRix1QkFTTTtJQUNILG9CQUFhO0VMODVCbkI7RUFDQTtJSzU1Qk0sV0FBVztFTDg1QmpCO0VBQ0E7SUs1NkJHLFdBQUE7RUw4NkJIO0VBQ0E7SUsxNUJNLDBCQUFXO1FBQ1gscUNBQWdCO0VMNDVCdEI7RUFDQTtJSzE1Qk0sa0JBQU87SUFDUCx1QkFBa0I7SUFDbkIsZ0JBQUE7RUEzQkY7RUx3N0JIO0lLejVCTSxZQUFTO0VMMjVCZjtFQUNBO0lLcjVCSyxrQkFBQTtJQXRDRix1QkE2QkM7SUFPSSxnQkFBYztFTDI1QnRCO0VLLzdCRztJQTRESCxhQUFBO0lBR0Usc0JBQW9CO0VMdzRCdEI7RUszNEJBO0lBTUksa0JBQWdCO0VMdzRCcEI7RUFDQTtJS3Q0Qkksa0JBQUE7SUFUSixhQUFBO0lBQUEseUJBWUk7SUFTSSxtQkFBZ0I7SUFDakIsa0JBQUE7SUF0QlAsdUJBNEJFO0lBQ0UsZ0JBQWdCO0VMZzRCcEI7RUs3NUJBO0lBa0NNLHdCQUFpQjtJQWxDdkIsMEJBdUNlO0VMNjNCZjtFQUNBO0lLMzNCRyxrQkFBQTtJQTFDSCxRQUFBO0lBNkNJLFNBQUE7SUFDQSxhQUFXO0lBS2IsbUJGNWhCZTtJRTZoQmYsa0JBQVM7SUFrQlYsWUFBQTtJQXBCRCxZQUlFO0lBQ0UsbUJBQWdCO0lBR2xCLDRCQUFhO0VMeTNCZjtFQUNBO0lLajNCSyxhQUFBO0lBREUsbUJBQUE7SUFNUCxXQUFBO0lBQ0UsWUFBUztFTG8zQlg7RUFDQTtJSzN6QkMsYUFBQTtJQTNERCxRQUFBO0lBTUksU0FBQTtFTG8zQko7RUsxM0JBO0lBU00sYUFBQTtJQUNELFFBQUE7SUFWTCxTQUFBO0VMKzNCQTtFQUNBOzs7O0lLaDRCQSxhQUFlO0VMcTRCZjtFQUNBO0lLNzJCRyxVQUFBO0lBekJILFdBQUE7SUE0QkksWUFBVztJQUNYLGdDQUFXO0lBQ1gsZ0JBQWdCO0lBQ2pCLGlCQUFBO0lBL0JILDJCQWlDRTtJQUNFLGtCQUFnQjtJQUNoQixnQkFBVztJQUNYLGVBQUE7SUFFRCxpQkFBQTtJQXRDSCxjQXdDRTtFTDIyQkY7RUFTQTtJSzU1QkEsMkJBdURlO0lBQ1gsa0JBQWU7SUFDaEIsZ0JBQUE7SUFLSCxlQUFnQjtJQUNkLGlCQUFBO0lBQ0EsY0FBQTtFTG0yQkY7RUtyMkJBO0lBZUksMkJBQWlCO0lBWWxCLGtCQUFBO0lBM0JILGdCQWNFO0lBS0ksZUFBYTtJQUNiLGlCQUFTO0lBTVYsY0FBQTtFQTFCTDtFQUFBO0lBZUksMkJBQWlCO0lBWWxCLGtCQUFBO0lBM0JILGdCQWNFO0lBS0ksZUFBYTtJQUNiLGlCQUFTO0lBTVYsY0FBQTtFQTFCTDtFTHMzQkE7SUs3MUJPLDBCQUFBO0VBS1A7RUw4MUJBO0lLeDFCSyxjQUFBO0VBTkw7RUxvMkJBO0lLdDFCTSxjQUFhO0VMdzFCbkI7RUFGQTtJS3QxQk0sY0FBYTtFTHcxQm5CO0VBQ0E7SUtqMUJGLGFBQWlCO0lBSWQsbUJBQUE7RUFFRDtFTG0xQkE7SUtqMUJFLGFBQVM7RUxtMUJYO0VLaDFCQTtJQUNFLGFBQVU7RUxrMUJaO0VLLzBCRTtJQUNFLGFBQUE7SUFERCw0QkFLRztFTCswQk47RUFDQTtJSzcwQk8sYUFBQTtFQVJKO0VMdzFCSDtJS3gwQlEsYUFBUTtFTDAwQmhCO0VBQ0E7SUt2MEJPLHdCQUFBO1FBcEJKLDZCQTJCRztJQUNFLHFCQUFlO0VMbTBCdkI7RUsvMUJHO0lBb0NFLGFBQUE7SUFVTCxzQkFBaUI7RUwwekJqQjtFQUNBO0lLeHpCRSxtQkFBa0I7RUwwekJwQjtFSzd6QkE7SUFTSSxzQkFBcUI7RUwwekJ6QjtFQUNBO0lLcDBCQSxtQkFLRTtFTGkwQkY7RUFDQTtJS3h6Qk0sMEJBQWdCO1FBQ2hCLHFDQUFlO0lBQ2Ysd0JBQWlCO1FBQ2xCLG1DQUFBO0lBbEJMLGFBQUE7RUw2MEJBO0VBQ0E7SUtyekJRLG1CQUFpQjtFTHV6QnpCO0VLaDFCQTtJQTZCUSxrQkFBZTtJQUNmLGtCQUFlO0lBQ2YsdUJBQWlCO0lBQ2xCLGdCQUFBO0VBaENQO0VMdTFCQTtJS256QlEsb0JBQVk7SUFDWixxQkFBZTtJQUNmLDRCQUFpQjtJQUNsQixnQkFBQTtFQXZDUDtFTDYxQkE7SUs1eUJJLGtCQUFXO0lBUVosa0JBQUE7SUF6REgsdUJBK0NFO0lBS0ksZ0JBQWU7RUw4eUJyQjtFQUNBO0lLNXlCSyxvQkFBQTtJQXZETCxxQkEyREU7SUFDRSw0QkFBZ0I7SUFDaEIsZ0JBQVc7RUwyeUJmO0VLeDJCQTtJQWlFSSxrQkFBZ0I7SUFDaEIsa0JBQVc7SUFDWix1QkFBQTtJQUlILGdCQUFPO0VMdXlCUDtFQUNBO0lLeHlCQSxvQkFHZ0I7SUFDWixxQkFBa0I7SUFDbEIsNEJBQWU7SUFDZixnQkFBYTtFTHV5QmpCO0VLN3lCQTtJQVVJLGtCQUFBO0lBQ0EsdUJBQXFCO0lBMkN0QixnQkFBQTtJQXRESCxlQVNFO0lBS0ksV0FBQTtJQXNDRCxpRUFBQTtFQXBETDtFTHN6QkE7SUtweUJPLGtCQUFBO0lBbEJQLHVCQWFJO0lBUUksZ0JBQWU7SUFDZixlQUFlO0lBQ2YsV0FBVztJQUNaLGlFQUFBO0VBeEJQO0VMOHpCQTtJS3p4QlcsVUFBQTtFQXJDWDtFTGkwQkE7SUs5eEJjLGtCQUFpQjtJQUNsQixrQkFBQTtJQXBDYix1QkFhSTtJQThCTSxnQkFBWTtJQUNaLGVBQVk7SUFDWixXQUFXO0VMMnhCckI7RUFDQTtJS2p4QkUsa0JBQVE7SUFDTixrQkFBZTtJQUNmLHVCQUFlO0lBQ2YsZ0JBQWE7SUFDZCxlQUFBO0lBTUgsV0FBQTtFTDh3QkE7RUFDQTtJSzV3QkUsbUJBQWU7RUw4d0JqQjtFQUNBO0lLM3dCQSx5QkFBZ0I7RUw2d0JoQjtFQUNBO0lLM3dCRSwwQkFBb0I7UUEwSHJCLHFDQUFBO0VBN0hEO0VMa3hCQTtJSzN3Qkksa0JBQVc7SUFTWix1QkFBQTtJQWhCSCxnQkFLRTtFTGl4QkY7RUFDQTtJSTNuREEsa0JBQVU7SUFDVix1QkFBaUI7SUFDakIsZ0JETE07RUhrb0ROO0VBQ0E7SUl6bkRBLGFBQUE7SUM0MkJLLHNCQUFBO0lBZkwsa0JBa0JFO0lBQ0UsU0FBQTtJQUNBLFdBQVc7SUFVWixhQUFBO0lBOUJILHNCQWtCRTtJRHgzQkYsVUFBVTtJQUNWLHdDQUFRO0VKZ3BEUjtFQUNBO0lJOW9EQSxnQkRMTTtFSHFwRE47RUFDQTtJSTlvREEsMEJBQWlCO1FBQ2pCLHFDRG5CZTtFSG1xRGY7RUFDQTtJS256QkEsa0JBa0JFO0lBU0ksdUJBQXFCO0lBQ3RCLGdCQUFBO0VBNUJMO0VMd3pCQTtJS3R4QkksWUFBVztFTHd4QmY7RUFDQTtJSzN6QkEsa0JBZ0NFO0lEdDRCRix1QkFBa0I7SUFDbEIsZ0JBQVE7RUpvcURSO0FBQ0Y7O0FBRUE7RUFDRTtJSWxxREEsaUJBQWlCO0lBQ2pCLGVEbkJlO0VIdXJEZjtFQUNBO0lLdjBCQSxrQkEwQ0U7RUwreEJGO0VBQ0E7SUs3eEJJLDBCQUFrQjtRQUtuQixxQ0FBQTtJQWxESCxvQkEwQ0U7UURoNUJGLDZCQUFrQjtFSnFyRGxCO0VBQ0E7SUluckRBLGtCQUFpQjtJQUNqQix1QkRMYztJQ01kLGdCQUFnQjtFSnFyRGhCO0VBQ0E7SUtweUJLLGFBQUE7SUFLTyxtQkFBRztJQUNYLFlBQUE7SUFNRCxrQkFBQTtJQTdESCx1QkFvREU7SUQxNUJGLGdCQUFVO0lBQ1YsZUFBUTtJQUNSLFdBQVU7RUpzc0RWO0VBQ0E7SUlwc0RBLFdBQVc7SUFDWCxrQkFBZTtJQUNmLFdBQVc7SUFDWCxnQkRuQmU7SUNvQmYsU0FBQTtJQ3c1QkssUUFBQTtJQTNETCxPQUFBO0lBZ0VJLHlCQUFjO0VMNHlCbEI7RUFDQTtJSzcyQkEsa0JBK0RFO0lEbjZCRixhQUFVO0lBR1YsOEJBQWdCO0lBQ2hCLFdBQVc7RUpzdERYO0VBQ0E7SUlwdERBLGlCQUFnQjtFSnN0RGhCO0VLejNCQTtJQTBFSSxhQUFhO0VMa3pCakI7RUFDQTtJSzczQkEsaUJBeUVFO0lELzZCRiwwQkFBa0I7UUFDZixxQ0FBSztJQUNSLDBCQUFVO1FBQ1YsK0JBQWlCO0VKc3VEakI7RUFDQTtJSXB1REEsa0JBQWU7SUFDZix1QkFBaUI7SUFDakIsZ0JEbkJlO0lDb0JmLGVBQUE7SUM0NkJLLG9CQUFBO0lBL0VMLGFBQWU7SUFtRlgsMERBQTBCO0lBNEIzQixrQ0FBQTtJQS9HSCxzQkFxRks7RUx5ekJMO0VBQ0E7SUsvNEJBLG1CQTBGSztFTHV6Qkw7RUFDQTtJS3J6Qk0sbUJBQWU7SUFDZixlQUFhO0lBQ2QsZ0JBQUE7RUEvRkw7RUx1NUJBO0lLcHpCTSxrQkFBZTtJQUNmLHVCQUFlO0lBQ2YsZ0JBQWE7RUxzekJuQjtFSzM1QkE7SUF5R00sbUJBQVk7SUFDWixlQUFZO0lBQ1osaUJBQWU7RUxxekJyQjtFQUNBO0lLajZCQSxrQkFrSEU7SUFDRSx1QkFBbUI7SUFDbkIsZ0JBQVk7SUFDWixlQUFXO0lBQ1gsV0FBUTtFTGl6Qlo7RUt2NkJBO0lBMEhJLGtCQUFlO0lBQ2hCLHVCQUFBO0lBSUgsZ0JBQVU7SUFDUixlQUFVO0lBRVgsV0FBQTtFQUVEO0VMMnlCQTtJS3p5QkUseUJBQWU7SUFDZixvQkFBaUI7RUwyeUJuQjtFS3h5QkE7SUFDRSxvQkFBYztFTDB5QmhCO0VBQ0E7SUt4eUJFLFdBQVU7RUwweUJaO0VLOXlCQTtJQU9JLFdBQVM7RUwweUJiO0VBQ0E7SUt4eUJJLGVBQWU7RUwweUJuQjtFS3B6QkE7SUFlSSxpQkFBYTtJQUNiLGFBQVc7SUFDWCwwQkFBaUI7UUFDakIscUNBQWtCO0lBQ2xCLG1CQUFTO1FBQ1Qsd0JBQVE7RUx3eUJaO0VBQ0E7SUs3ekJBLGtCQWNFO0lBVUksdUJBQWlCO0lBQ2pCLGdCQUFPO0VMd3lCYjtFS2owQkE7SUE2Qk0scUJBQWE7RUx1eUJuQjtFQUNBO0lLcnlCTSxrQkFBTztJQUNQLHVCQUFXO0lBQ1gsZ0JBQVM7RUx1eUJmO0VLejBCQTtJQXFDUSxxQkFBUztFTHV5QmpCO0VBQ0E7SUtyeUJRLGtCQUFpQjtJQUNsQixrQkFBQTtJQXpDUCx1QkFjRTtJQThCTSxnQkFBZTtFTHN5QnZCO0VBQ0E7SUtweUJPLGtCQUFBO0lBL0NQLHVCQWNFO0lBb0NNLGdCQUFlO0lBQ2YsZUFBYTtJQUNkLFdBQUE7SUFwRFAsZ0VBc0RpQjtFTG95QmpCO0VBQ0E7SUtseUJRLGtCQUFXO0lBQ1osdUJBQUE7SUExRFAsZ0JBa0VLO0lBQ0MsZUFBZTtJQUNmLFdBQVc7SUFDWCxnRUFBaUI7RUw2eEJ2QjtFS2wyQkE7SUF5RU0sa0JBQWU7SUFDZix1QkFBZTtJQUNmLGdCQUFhO0lBQ2QsZUFBQTtJQTVFTCxXQUFBO0VMeTJCQTtFQUNBO0lLdnhCUSxrQkFBZTtJQUNmLHVCQUFpQjtJQU9sQixnQkFBQTtJQTNGUCxlQThFSztJQVNLLFdBQVc7RUx5eEJyQjtFQUNBO0lLajNCQSx5QkE4RUs7RUxxeUJMO0VBQ0E7SUtweEJRLG1CQUFhO0VMc3hCckI7RUFDQTtJS3B4Qk8sMEJBQUE7UUFuR1AscUNBcUdNO0lBQ0UseUJBQVk7UUFDWiw4QkFBWTtJQUNaLGFBQVc7RUxxeEJuQjtFQUNBO0lLNXdCQSxrQkFBUTtJQUNOLHVCQUFVO0lBQ1YsZ0JBQVU7RUw4d0JaO0VLaHhCQTtJQUtJLGtCQUFBO0lBQ0EsdUJBQW9CO0lBQ3BCLGdCQUFhO0lBQ2IsZUFBZTtJQTZDaEIsV0FBQTtFQXJESDtFTHd4QkE7SUs1d0JNLGlCQUFVO0VMOHdCaEI7RUFDQTtJSzV3Qk0sYUFBUztJQUNULHlCQUFRO0VMOHdCZDtFQUNBO0lLNXdCSyxnQkFBQTtFQW5CTDtFTGt5QkE7SUsxd0JNLDBCQUFhO1FBQ2IscUNBQVc7RUw0d0JqQjtFQUNBO0lLMXdCTSxrQkFBZ0I7SUFDaEIsdUJBQVc7SUFhWixnQkFBQTtFQTFDTDtFTDJ5QkE7SUsxd0JRLGFBQU87RUw0d0JmO0VLN3lCQTtJQXFDUSxrQkFBa0I7SUFDbEIsdUJBQWE7SUFDYixnQkFBZTtJQXZDdkIsYUFJRTtJQTRDSSx5QkFBaUI7RUx3d0J2QjtBQUNGOztBQUVBO0VLandCQTtJQUVFLG1CQUNFO0VMaXdCRjtFQUNBO0lLL3ZCSSxjQUFXO0lBQ1gsZUFBWTtFTGl3QmhCO0VBQ0E7SUFDRSxrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLG1CQUFtQjtRQUNmLHdCQUF3QjtFQUM5QjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLGNBQWM7RUFDaEI7RUFDQTtJQUNFLFFBQVE7SUFDUixRQUFRO0lBQ1IsWUFBWTtJQUVKLGVBQWU7RUFDekI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7RUFDQTtJQUNFLGFBQWE7RUFDZjtFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLDBCQUEwQjtRQUN0QixxQ0FBcUM7SUFDekMsd0JBQXdCO1FBQ3BCLG1DQUFtQztFQUN6QztFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFdBQVc7SUFDWCwwREFBMEQ7SUFDMUQsa0NBQWtDO0lBQ2xDLDZCQUE2QjtFQUMvQjtFQUNBO0lBQ0UsUUFBUTtJQUNSLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixXQUFXO0VBQ2I7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsV0FBVztFQUNiO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsV0FBVztFQUNiO0VBQ0E7SUFDRSxvQkFBb0I7RUFDdEI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxxQkFBcUI7UUFDakIsMEJBQTBCO0lBQzlCLGdCQUFnQjtRQUNaLHFCQUFxQjtFQUMzQjtFQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFDRSxtQkFBbUI7RUFDckI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxZQUFZO0VBQ2Q7RUFLQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFLQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFIQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLFlBQVk7SUFDWixZQUFZO0lBQ1osZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLFNBQVM7SUFDVCxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixxQkFBcUI7UUFDakIsMEJBQTBCO0lBQzlCLHdCQUF3QjtRQUNwQixtQ0FBbUM7RUFDekM7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLFdBQVc7RUFDYjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLFdBQVc7RUFDYjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZixXQUFXO0VBQ2I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsV0FBVztJQUNYLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsV0FBVztJQUNYLGdFQUFnRTtFQUNsRTtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZixXQUFXO0lBQ1gsZ0VBQWdFO0VBQ2xFO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7SUFDVixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxzQkFBc0I7RUFDeEI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLFdBQVc7RUFDYjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZixXQUFXO0VBQ2I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsV0FBVztJQUNYLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0UsMEJBQTBCO0VBQzVCO0VBQ0E7SUFDRSxrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsU0FBUztJQUNULG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixvQkFBb0I7T0FDakIsaUJBQWlCO0lBQ3BCLFdBQVc7SUFDWCxhQUFhO0VBQ2Y7RUFDQTtJQUNFLG1CQUFtQjtFQUNyQjtFQUNBO0lBQ0Usa0JBQWtCO0VBQ3BCO0VBQ0E7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsY0FBYztJQUNkLHFCQUFxQjtRQUNqQiwwQkFBMEI7SUFDOUIsZ0JBQWdCO1FBQ1oscUJBQXFCO0lBRWpCLHFCQUFnQjtJQUFoQixnQkFBZ0I7RUFDMUI7RUFDQTtJQUdFLGFBQWE7SUFDYixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG9CQUFvQjtFQUN0QjtFQUNBO0lBR0UsYUFBYTtJQUNiLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxRQUFRO0lBQ1IsT0FBTztFQUNUO0VBQ0E7SUFDRSxpQkFBaUI7SUFDakIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFHRSxhQUFhO0lBSUwsc0JBQXNCO0lBQzlCLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsV0FBVztJQUNYLDRCQUE0QjtFQUM5QjtFQUNBO0lBQ0UsU0FBUztJQUNULG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxXQUFXO0VBQ2I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBS0E7SUFDRSxlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBS0E7SUFDRSxlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBSEE7SUFDRSxlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYixXQUFXO0lBQ1gsWUFBWTtFQUNkO0VBQ0E7SUFDRSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLFVBQVU7SUFDVixrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLDBCQUEwQjtRQUN0QixxQ0FBcUM7SUFDekMsMEJBQTBCO1FBQ3RCLCtCQUErQjtJQUczQixtQkFBbUI7SUFDM0IscUJBQXFCO0VBQ3ZCO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osU0FBUztJQUNULFFBQVE7SUFDUixPQUFPO0lBQ1AseUJBQXlCO0VBQzNCO0VBQ0E7SUFDRSxzQkFBc0I7SUFHdEIsYUFBYTtJQUNiLFdBQVc7SUFJSCxzQkFBc0I7SUFHdEIsbUJBQW1CO0lBQzNCLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixXQUFXO0VBQ2I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxrQkFBa0I7SUFHbEIsYUFBYTtJQUdMLHVCQUF1QjtJQUMvQixXQUFXO0VBQ2I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLG9CQUFvQjtFQUN0QjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxtQkFBbUI7SUFDbkIsb0JBQW9CO09BQ2pCLGlCQUFpQjtJQUNwQixXQUFXO0lBQ1gsWUFBWTtFQUNkO0FBQ0Y7QUFDQSxvQ0FBb0MiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgc3JjOiBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L1JvYm90by1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG8gUmVndWxhclwiKSwgbG9jYWwoXCJSb2JvdG8tUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdUVCBGaXJzIE5ldWUnO1xuICBzcmM6IGxvY2FsKFwiVFQgRmlycyBOZXVlIEJvbGRcIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1Cb2xkXCIpLCB1cmwoXCIuLi9mb250L1RURmlyc05ldWUtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBNZWRpdW1cIiksIGxvY2FsKFwiVFRGaXJzTmV1ZS1NZWRpdW1cIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVFQgRmlycyBOZXVlJztcbiAgc3JjOiBsb2NhbChcIlRUIEZpcnMgTmV1ZSBSZWd1bGFyXCIpLCBsb2NhbChcIlRURmlyc05ldWUtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udC9UVEZpcnNOZXVlLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvVFRGaXJzTmV1ZS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5wYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7XG59XG5cbmlmcmFtZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIlRUIEZpcnMgTmV1ZVwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzFweDtcbn1cblxuLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuXG4uaGVhZGVyIC5oZWFkZXJfX2J1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsxMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgLW1zLWdyaWQtcm93czogODBweDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogODBweDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICBncmlkLWF1dG8tcm93czogNDVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogMS80O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IHtcbiAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNztcbiAgZ3JpZC1jb2x1bW46IDQvMTE7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2IC5uYXZfX2J1cmdlci1vcGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluayB7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2xpbms6Zm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gIG91dGxpbmU6IDRweCBzb2xpZCAjQkM1NzJCO1xuICBvdXRsaW5lLW9mZnNldDogLTFweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCAubmF2X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19pY29uIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMTtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gIGdyaWQtY29sdW1uOiAxMS8xMztcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3Qge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xpc3QgLmhlYWRlcl9faXRlbSAuaGVhZGVyX19pdGVtLWljb246Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmZvY3VzLXZpc2libGUgcGF0aCB7XG4gIGZpbGw6ICNCQzU3MkI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19saXN0IC5oZWFkZXJfX2l0ZW0gLmhlYWRlcl9faXRlbS1pY29uOmFjdGl2ZSBwYXRoIHtcbiAgZmlsbDogI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs0XTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIC1tcy1ncmlkLXJvd3M6IDM1MHB4IDI1N3B4O1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNTBweCAyNTdweDtcbiAgZ3JpZC1hdXRvLXJvd3M6IDI1N3B4O1xuICBnYXA6IDMwcHg7XG4gIHBhZGRpbmctdG9wOiAzNHB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMS8zO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG4gIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xuICBncmlkLXJvdzogMS8zO1xuICBwYWRkaW5nOiAwIDYwcHggNjBweCA2MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvaGVyby1iYWNrZ3JvdW5kLTE5MjAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMTo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0LzQsNGB0YLQtdGA0LrQu9Cw0YHRgVwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjJweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmc6IDdweCAxNXB4IDdweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0biB7XG4gIG1heC13aWR0aDogMTU5cHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGNkUzMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjZmZmO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBsaW5lYXI7XG59XG5cbi5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX19idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkM1NzJCO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX2J0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0U0MzA3O1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogMy81O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiAuaGVyb19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMDQlO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIgLmhlcm9fX3BpY3R1cmUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXQge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMzBweCAwIDY5cHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDMxcHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYWJvdXRfX2dyaWQge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmFib3V0X19pdGVtMiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSB7XG4gIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fcGljdHVyZSAuYWJvdXRfX2ltZzIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWw6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IDpob3Zlcjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgOmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjRkY2RTMwO1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19idG46Zm9jdXMtdmlzaWJsZSB7XG4gIG91dGxpbmU6IDNweCBzb2xpZCAjQ0U0MzA3O1xufVxuXG4uYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG59XG5cbi5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5wcm9qZWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLnByb2plY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtbXMtZ3JpZC1yb3dzOiAoMWZyKVsyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiAzMDBweDtcbiAgZ2FwOiAzMHB4O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0LXQudC30LDQtlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAzO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgZ3JpZC1jb2x1bW46IDMvNTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICBncmlkLWNvbHVtbjogNS83O1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMzo6YmVmb3JlIHtcbiAgY29udGVudDogXCIj0L/RgNC10LTQvNC10YJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdweDtcbiAgcmlnaHQ6IDdweDtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMgLmJsb2NrX190ZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA2O1xuICBncmlkLWNvbHVtbjogNy8xMztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiNmdWppXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNjtcbiAgZ3JpZC1jb2x1bW46IDEvNztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01OjpiZWZvcmUge1xuICBjb250ZW50OiBcIiPQv9GA0L7QtdC60YLQt9Cw0LHQstC10L3QuNC1XCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtZ3JpZC1jb2x1bW46IDc7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICBncmlkLWNvbHVtbjogNy8xMDtcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9GA0LXRgtGD0YjRjFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogN3B4O1xuICByaWdodDogN3B4O1xuICBwYWRkaW5nOiA2cHggMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLWdyaWQtY29sdW1uOiAxMDtcbiAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gIGdyaWQtY29sdW1uOiAxMC8xMztcbiAgLW1zLWdyaWQtcm93OiAyO1xuICBncmlkLXJvdzogMjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI9C/0L7RgNGC0YDQtdGCXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cHg7XG4gIHJpZ2h0OiA3cHg7XG4gIHBhZGRpbmc6IDZweCAxNHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX2JveCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fYm94IC5ibG9ja19fcGljdHVyZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxODRweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJsb2NrX19kYXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL21kaV9jYWxlbmRhcl90b2RheS5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgcGFkZGluZzogMjJweCAwIDMwcHggMzBweDtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX19ib3gge1xuICBtYXgtd2lkdGg6IDI5MnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsZW5kYXJfdG9kYXlfd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDE3cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzX19ncmlkIC5iYWNrX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fdGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIHdpZHRoOiAxMjFweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGxpbmVhciwgYm9yZGVyIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgbGluZWFyLCBib3JkZXIgMC4ycyBsaW5lYXI7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjQkM1NzJCO1xuICBib3JkZXI6IDNweCBzb2xpZCAjRkY2RTMwO1xufVxuXG4ucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjZFMzA7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCAuYmFja19fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNDRTQzMDc7XG59XG5cbi5jb250YWN0c19fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICBjb2xvcjogIzIwMjAyMDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIHtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY1Ljg5JSAxZnI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgICBjb2x1bW4tZ2FwOiAzMHB4O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gIHBhZGRpbmctdG9wOiA2cHg7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIFtjbGFzcyo9XCJncm91bmQtcGFuZVwiXSB7XG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7XG4gICAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSk7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCBbY2xhc3MqPVwiY29weXJpZ2h0cy1wYW5lXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxNzVweCA1MHB4IDUwcHggNjBweDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMzIsIDMyLCAwLjg1KTtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19kZXNjciB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNDQUNBQ0E7XG59XG5cbi5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX3RlbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMnB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zdmcvbWRpX2NhbGwuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgbGVmdDtcbn1cblxuLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8gLm1hcF9fZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuLmFwcGxpY2F0aW9uX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZGVzY3Ige1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzk5OTk5OTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX25hbWUgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19lbWFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fZW1haWwgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19tZXNzYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX21lc3NhZ2UgLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAyM3B4O1xufVxuXG4uYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0cyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDAgMjNweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIGNvbG9yOiAjOTk5OTk5O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAxcHggc29saWQgI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOmhvdmVyOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0ZGNkUzMDtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHM6aG92ZXI6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNGRjZFMzA7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAudGV4dGFyZWEge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi5hcHBsaWNhdGlvbl9fZm9ybSAuYXBwbGljYXRpb25fX2J0biB7XG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY2RTMwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGxpbmVhcjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmZvY3VzLXZpc2libGUge1xuICBvdXRsaW5lOiAzcHggc29saWQgI0NFNDMwNztcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JDNTcyQjtcbn1cblxuLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRTQzMDc7XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogLW1zLWdyaWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzEyXTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xuICAtd2Via2l0LWNvbHVtbi1nYXA6IDMwcHg7XG4gICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNDtcbiAgZ3JpZC1jb2x1bW46IDEvNTtcbiAgd2lkdGg6IDI2M3B4O1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ29fX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNjNweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJUVCBGaXJzIE5ldWVcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI0U5RTlFOTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlcl9fcmlnaHQge1xuICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA4O1xuICBncmlkLWNvbHVtbjogNS8xMztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3Ige1xuICB3aWR0aDogMzYxcHg7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItZGVzY3JfX3RleHQge1xuICB3aWR0aDogMzYxcHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjQ0FDQUNBO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWRlc2NyX190ZXh0IC5mb290ZXItZGVzY3JfX3NwYW4ge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogI0NBQ0FDQTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMjFweDtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1uZXR3b3JrIC5mb290ZXItbmV0d29ya19fbGlzdCAuZm9vdGVyLW5ldHdvcmtfX2l0ZW0taWNvbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICBmaWxsOiAjQkM1NzJCO1xufVxuXG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLW5ldHdvcmsgLmZvb3Rlci1uZXR3b3JrX19saXN0IC5mb290ZXItbmV0d29ya19faXRlbS1pY29uOmhvdmVyIHBhdGgge1xuICBmaWxsOiAjRkY2RTMwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbmV0d29yayAuZm9vdGVyLW5ldHdvcmtfX2xpc3QgLmZvb3Rlci1uZXR3b3JrX19pdGVtLWljb246YWN0aXZlIHBhdGgge1xuICBmaWxsOiAjQ0U0MzA3O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXItLWFkZCB7XG4gICAgei1pbmRleDogNSAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWltcG9ydGFudDtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA1NDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNzBweDtcbiAgICBwYWRkaW5nOiAxNHB4IDIxcHggMzZweCAyMXB4O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjODA4MDgwO1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgei1pbmRleDogLTU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTU0MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTQwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgbGluZWFyLCB0cmFuc2Zvcm0gMC41cyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGxpbmVhciwgdHJhbnNmb3JtIDAuNXMgbGluZWFyLCAtd2Via2l0LXRyYW5zZm9ybSAwLjVzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2V4aXQge1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpmb2N1cy12aXNpYmxlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fZXhpdCAuYnVyZ2VyX19pY29uLWV4aXQ6Zm9jdXMtdmlzaWJsZSBjaXJjbGUge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDpob3ZlciBjaXJjbGUge1xuICAgIGZpbGw6ICNGRjZFMzA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuM3MgbGluZWFyO1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19leGl0IC5idXJnZXJfX2ljb24tZXhpdDphY3RpdmUgY2lyY2xlIHtcbiAgICBmaWxsOiAjQ0U0MzA3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fbGluayB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNCQzU3MkI7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNCQzU3MkI7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXJfX3RlbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMXB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9tZGlfY2FsbCBSLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBsZWZ0O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmZvY3VzLXZpc2libGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgb3V0bGluZTogNHB4IHNvbGlkICNmZmY7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbiAgLmhlYWRlciAuYnVyZ2VyX190ZWw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlcl9fdGVsOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTY2cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMy84O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXZfX2xpc3QgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMzcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDg7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDgvOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLS1vcGVuIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNDJweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB3aWR0aDogMzQycHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQycHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MnB4KTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMXB4O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtY2xlYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPXRleHRdOjotbXMtcmV2ZWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTlFOUU5O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6IFwiVFQgRmlycyBOZXVlXCI7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMXB4O1xuICAgIGNvbG9yOiAjRTlFOUU5O1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IC5zZWFyY2hfX2Zvcm0tbGVmdCAuc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiBcIlRUIEZpcnMgTmV1ZVwiO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBjb2xvcjogI0U5RTlFOTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI0ZGNkUzMDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtbGVmdCAuc2VhcmNoX19mb3JtLWxlZnQgLnNlYXJjaF9faW5wdXQ6aG92ZXI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWxlZnQgLnNlYXJjaF9fZm9ybS1sZWZ0IC5zZWFyY2hfX2lucHV0OmhvdmVyOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNGRjZFMzA7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW4ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3Blbjpmb2N1cy12aXNpYmxlIHBhdGgge1xuICAgIGZpbGw6ICNCQzU3MkI7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLW9wZW46aG92ZXIgcGF0aCB7XG4gICAgZmlsbDogI0ZGNkUzMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGZpbGwgMC4zcyBsaW5lYXI7XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGxpbmVhcjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fc2VhcmNoLWNvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtb3BlbjphY3RpdmUgcGF0aCB7XG4gICAgZmlsbDogI0NFNDMwNztcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1yb3dzOiAxZnIgMTg2cHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDE4NnB4O1xuICAgIGdyaWQtYXV0by1yb3dzOiAyNTdweDtcbiAgfVxuICAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19waWN0dXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogKGF1dG8pWzNdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBhdXRvKTtcbiAgICByb3ctZ2FwOiAyM3B4O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAuYmxvY2tfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMSAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDU7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDQ7XG4gICAgZ3JpZC1jb2x1bW46IDUvOTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyAuYmxvY2tfX3RleHQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTEwMjQuanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi0xMDI0LmpwZ1wiKTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSAuYmFjayB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNjtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNi85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAzMHB4IDAgMzhweCAzMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbOF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDgsIDFmcik7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogNTtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDY7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDYvOTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDI1cHggMCAwIDMwcHg7XG4gICAgei1pbmRleDogMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMyLCAzMiwgMzIsIDAuODUpO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2xvY2F0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDI5M3B4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs4XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOCwgMWZyKTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbyAuZm9vdGVyLWxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDE2NnB4O1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX3JpZ2h0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDQ7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDU7XG4gICAgZ3JpZC1jb2x1bW46IDQvOTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDQ2cHg7XG4gICAgcGFkZGluZzogMCAyN3B4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6ICgpWzJdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyKTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLmhlYWRlcl9fbG9nbyB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA1O1xuICAgIGdyaWQtY29sdW1uOiAxLzY7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5uYXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogODtcbiAgICBncmlkLWNvbHVtbjogMS85O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDVweDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEE0QTRBO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAubmF2X19saXN0IC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2ljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNF07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMjkxcHggMTMzcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMjkxcHggMTMzcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICAtbXMtZ3JpZC1yb3ctc3BhbjogMjtcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9oZXJvLWJhY2tncm91bmQtNzY4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTEgLmhlcm9fX2Rlc2NyIC5kZXNjci1oZXJvX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA5MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiA0LzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5hYm91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgICBwYWRkaW5nOiAzMHB4IDAgNTBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19pdGVtMiB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWdyaWQ7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVs2XTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiBhdXRvO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIC5ibG9ja19fdGV4dCB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0yIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogNS83O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW00IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMS03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW01IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgICAtbXMtZ3JpZC1yb3c6IDQ7XG4gICAgZ3JpZC1yb3c6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2plY3RzLWJhY2tncm91bmQtMi03NjguanBnXCIpO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW02IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTcge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogNDtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMztcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2sge1xuICAgIHBhZGRpbmc6IDMwcHggMCAzMHB4IDMwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6ICgxZnIpWzZdO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICAgIC1tcy1ncmlkLXJvd3M6IDQ2MHB4LCAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDYwcHgsIDFmcjtcbiAgICByb3ctZ2FwOiAyNHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDY7XG4gICAgZ3JpZC1jb2x1bW46IDEvNztcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiA0O1xuICAgIGdyaWQtY29sdW1uOiAxLzU7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCB7XG4gICAgbWluLWhlaWdodDogNDY2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5jb250YWN0c19fbWFwIC5tYXBfX2luZm8ge1xuICAgIGhlaWdodDogMTU3cHg7XG4gICAgcGFkZGluZzogMjVweCAwIDI0cHggMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19sb2NhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0MzZweDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbNl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDM7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19kZXNjciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiA0O1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAzO1xuICAgIGdyaWQtY29sdW1uOiA0Lzc7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MTg7XG4gICAgcGFkZGluZzogMCAyMXB4O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIge1xuICAgIC1tcy1ncmlkLXJvd3M6IDcwcHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNzBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdiAubmF2X19idXJnZXItb3BlbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oZWFkZXJfX2NvbnRhaW5lciAuaGVhZGVyX19zZWFyY2gtY29udGFpbmVyIC5oZWFkZXJfX3NlYXJjaC1sZWZ0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjc5cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5oZWFkZXJfX2xvZ28gLmhlYWRlcl9faW1nIHtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmhlYWRlcl9fY29udGFpbmVyIC5zZWFyY2hfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuICAuaGVhZGVyX19jb250YWluZXIgLm5hdl9fbGlzdCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAoMWZyKVsyXTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbM107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIGF1dG8pO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtY29sdW1uLXNwYW46IDI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2hlcm8tYmFja2dyb3VuZC0zMjAuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgcGFkZGluZzogMjM0cHggNDZweCAzMHB4IDMwcHg7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTE6OmJlZm9yZSB7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA0cHggN3B4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMSAuaGVyb19fZGVzY3IgLmRlc2NyLWhlcm9fX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTAlO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0xIC5oZXJvX19kZXNjciAuZGVzY3ItaGVyb19fYnRuIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtMiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICAgIGdyaWQtcm93OiAyO1xuICB9XG4gIC5oZXJvX19jb250YWluZXIgLmhlcm9fX2l0ZW0yIC5oZXJvX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwNCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRhaW5lciAuaGVyb19faXRlbTMge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMTtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgICBncmlkLXJvdzogMztcbiAgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAxO1xuICAgIGdyaWQtY29sdW1uOiAyLzM7XG4gICAgLW1zLWdyaWQtcm93OiAzO1xuICAgIGdyaWQtcm93OiAzO1xuICB9XG4gIC5hYm91dCB7XG4gICAgcGFkZGluZzogMzFweCAwIDYwcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIzcHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX3BpY3R1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLmFib3V0IC5hYm91dF9fZ3JpZCAuYWJvdXRfX2l0ZW0yIC5hYm91dF9fZm9ybSAuYWJvdXRfX2lucHV0IC5hYm91dF9fZW1haWwge1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5hYm91dCAuYWJvdXRfX2dyaWQgLmFib3V0X19pdGVtMiAuYWJvdXRfX2Zvcm0gLmFib3V0X19pbnB1dCAuYWJvdXRfX2VtYWlsOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9faW5wdXQgLmFib3V0X19lbWFpbDo6cGxhY2Vob2xkZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXQgLmFib3V0X19ncmlkIC5hYm91dF9faXRlbTIgLmFib3V0X19mb3JtIC5hYm91dF9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICB9XG4gIC5wcm9qZWN0c19fdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjNweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQge1xuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAoYXV0bylbN107XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDcsIGF1dG8pO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW0xOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTEgLmJsb2NrX190ZXh0IHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTIge1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTI6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMiAuYmxvY2tfX3RleHQge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtMyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICBncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1yb3c6IDM7XG4gICAgZ3JpZC1yb3c6IDM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTM6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNDtcbiAgICBncmlkLXJvdzogNDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0xLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTQ6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNztcbiAgICBncmlkLXJvdzogNztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvcHJvamVjdHMtYmFja2dyb3VuZC0yLTMyMC5qcGdcIik7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5wcm9qZWN0c19faXRlbTU6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNXB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogNXB4IDE0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNiB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogNTtcbiAgICBncmlkLXJvdzogNTtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLnByb2plY3RzX19pdGVtNjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwYWRkaW5nOiA1cHggMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiA2O1xuICAgIGdyaWQtcm93OiA2O1xuICB9XG4gIC5wcm9qZWN0c19fZ3JpZCAucHJvamVjdHNfX2l0ZW03OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAxNHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5iYWNrIHtcbiAgICBwYWRkaW5nOiAxOTZweCAwIDMwcHggMzBweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2RhdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RpdGxlIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHJvamVjdHNfX2dyaWQgLmJhY2tfX2J0biB7XG4gICAgd2lkdGg6IDEwOXB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnByb2plY3RzX19ncmlkIC5ibG9ja19fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgfVxuICAuY29udGFjdHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuY29udGFpbmVyIC5jb250YWN0c19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAtbXMtZ3JpZC1yb3dzOiAyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDI7XG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICAgICAgY29sdW1uLWdhcDogMzBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19pdGVtMSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXgtaGVpZ2h0OiA0NzJweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0OTVweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogNDcycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzVweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAueW1hcHMtMi0xLTc5LW1hcCB7XG4gICAgbWluLWhlaWdodDogNDcycHg7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMjZweCAzNXB4IDE0cHggMjBweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuY29udGFjdHNfX21hcCAubWFwX19pbmZvIC5tYXBfX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX190ZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmNvbnRhY3RzX19tYXAgLm1hcF9faW5mbyAubWFwX19leGl0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Rlc2NyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5pbnB1dF9fY29udGFjdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLmlucHV0X19jb250YWN0czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgLmNvbnRhY3RzX19ncmlkIC5hcHBsaWNhdGlvbl9fZm9ybSAuaW5wdXRfX2NvbnRhY3RzOjpwbGFjZWhvbGRlciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICB9XG4gIC5jb250YWN0c19fZ3JpZCAuYXBwbGljYXRpb25fX2Zvcm0gLnRleHRhcmVhIHtcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgfVxuICAuY29udGFjdHNfX2dyaWQgLmFwcGxpY2F0aW9uX19mb3JtIC5hcHBsaWNhdGlvbl9fYnRuIHtcbiAgICB3aWR0aDogMTE1cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogKDFmcilbMl07XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgLW1zLWdyaWQtcm93czogMTIzcHgsIDYycHg7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTIzcHgsIDYycHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXItbG9nbzo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2MnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0QTRBNEE7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBwYWRkaW5nOiAxNHB4IDAgMTNweCAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcbiAgICAtbXMtZ3JpZC1jb2x1bW4tc3BhbjogMjtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMjtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyLWxvZ28gLmZvb3Rlci1sb2dvX19pbWcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTExLjU1cHg7XG4gIH1cbiAgLmZvb3RlciAuZm9vdGVyX19jb250YWluZXIgLmZvb3Rlci1sb2dvIC5mb290ZXItbG9nb19fdGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19yaWdodCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLWNvbHVtbi1zcGFuOiAyO1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtcm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAzMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAucHJvamVjdHNfX2dyaWQgLmJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5jc3MubWFwICovIl19 */
